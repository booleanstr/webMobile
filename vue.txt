1、vue的使用  导入vue.js  
2、vue常用指令  

插值表达式  {{  }}  可以写变量 可以调用方法 可以写表达式
{{  50 }}
{{ 50 - 80 }} 
{{ msg }}
{{  fn()  }}
-----------------------------------------------------------------------------------
v-for 
v-for='(item,index) in arr'  脚手架中 v-for需要动态绑定一个:key 
示例：
<div v-for='(item,index) in arr'  :key='index'>
-----------------------------------------------------------------------------------
v-if 
v-show 
-----------------------------------------------------------------------------------
动态绑定  v-bind:class   :class
-----------------------------------------------------------------------------------
双向数据绑定  v-model
-----------------------------------------------------------------------------------
绑定事件  语法糖是@  v-on:click="fn()"  @click='fn'     
阻止事件冒泡 给子事件增加.stop    给父事件增加.self
-----------------------------------------------------------------------------------
3、
过滤器：
	filter 目的是为了对显示的数据进行处理 比如 100人民币    显示为￥100
使用方法为在 script中增加一个 filters对象  在对象中添加一个方法 该方法实现数据处理
过滤器串联 
-----------------------------------------------------------------------------------
4、组件：
	组件的概念：组件其实就是一个网页模块 组件之间可以相互调用 拼接 
	组件的定义： 父组件 子组件 
	组件的分类： 
		1、全局组件  定义在script中 任何实例都可以调用 
		2、局部组件  定义在某个具体的实例中 只能在当前的实例中调用
     组件之间的调用：
	1、在父组件中使用import关键字导入子组件  son
	2、在父组件的compontents中记录当前的子组件名称  son
	3、在父组件的模板中调用子组件 <son></son>

     组件之间的传值：
	--父传子  属于正向传递  是主动传递  子组件使用props接收父组件的传值 
	--子传父  属于逆向传递  是被动传递 需要使用事件来触发 
		步骤1:   在子组件中定义个函数fn  并实现调用
		步骤2：在子组件的函数fn中 使用$.emit自定义事件名称 比如change 同时还可以传递参数 
		步骤3：在父组件中定义一个函数 getVal
		步骤4：在父组件的模板中调用子组件 在子组件上添加自定义事件@change 调用父组件的函数 getVal
		步骤5：在getVal函数中接收子组件传递过来的值 
    
    槽口的使用：
	具名槽口：  <slot name='abc' />
	<img slot='abc'>

5、生命周期函数 【钩子函数】
	一个实例 从开始创建前 到创建后 到挂载前 挂载后  到销毁 具体见ppt
	在不同的阶段可以执行不同的操作 默认没有可执行的代码  类似于class中的构造函数 constructor
	常用的钩子函数：mounted 挂载后 
6、vue-router  路由 
	路由可以看做是我们平时用的一个大路由器 可以定义很多的路由连接 我们在代码中可以使用路由定义路径
	路由我们定义在router文件夹中的js文件中 
	路由组成：
		<router-link to='路由名称'>测试<router-link /> 类似于超链接 
		<router-view></router-view>  //显示路由的结果
	路由分类：
		一级路由
		二级路由
	路由传参：
		path:'/home:id'
		<router-link to='/home: 100 '>测试<router-link /> 

7、vue-cli 脚手架的使用 
	1、先全局安装vue   再安装vue-cli
		npm i  vue -g       npm  i  @vue/cli  -g
	2、使用脚手架搭建一个vue项目
		- 在项目地址中进入dos  执行 vue create projectName
		- 选择项目的配置文件  vuex router babal 
		- 选择版本2.0
		- 项目创建完毕后  进入项目文件 
		- 启动服务 npm run serve
	3、基本的项目结构：
		main.js是程序的入口 
		compontents 文件夹中放置的是组件  一般为公共组件  
		views文件夹中放置的是直接展示的组件 一般为父组件 
		public: 图片 json文件 css  js等 都可以放置在里边 
		router是路由文件	
		store文件夹是vuex状态管理的内容 
8、axios的使用
	 - npm i axios -g
	 - 在main.js中进行全局注册 
	 - 在组件中使用this.axios进行使用 
	this.axios.get('www.baidu.com').then(res=>{
		console.log(res.data);
	})  
9、elementUI的使用
	全局安装
	全局注册
	在页面中直接编写标签  参考官网
10、echarts的使用 
	详见官网
		 


